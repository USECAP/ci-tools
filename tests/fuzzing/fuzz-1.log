INFO: Seed: 2341323595
INFO: Loaded 1 modules   (103 guards): 103 [0x59a3e0, 0x59a57c), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 2 ft: 2 corp: 1/1b lim: 4 exec/s: 0 rss: 35Mb
#19	NEW    cov: 4 ft: 4 corp: 2/4b lim: 4 exec/s: 0 rss: 35Mb L: 3/3 MS: 2 CopyPart-InsertByte-
#3075	NEW    cov: 7 ft: 7 corp: 3/7b lim: 6 exec/s: 0 rss: 35Mb L: 3/3 MS: 1 CMP- DE: "F\x00"-
#12256	NEW    cov: 10 ft: 10 corp: 4/14b lim: 14 exec/s: 0 rss: 36Mb L: 7/7 MS: 1 CMP- DE: "U\x00\x00\x00"-
#12364	REDUCE cov: 10 ft: 10 corp: 4/13b lim: 14 exec/s: 0 rss: 36Mb L: 6/6 MS: 3 PersAutoDict-ChangeBit-EraseBytes- DE: "U\x00\x00\x00"-
#12366	REDUCE cov: 10 ft: 10 corp: 4/12b lim: 14 exec/s: 0 rss: 36Mb L: 5/5 MS: 2 CopyPart-EraseBytes-
#12817	REDUCE cov: 10 ft: 10 corp: 4/11b lim: 14 exec/s: 0 rss: 36Mb L: 4/4 MS: 1 EraseBytes-
#12863	REDUCE cov: 10 ft: 10 corp: 4/10b lim: 14 exec/s: 0 rss: 36Mb L: 3/3 MS: 1 EraseBytes-
#20924	REDUCE cov: 12 ft: 12 corp: 5/14b lim: 21 exec/s: 0 rss: 36Mb L: 4/4 MS: 1 InsertByte-
=================================================================
==13872==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000a46b3 at pc 0x000000555afd bp 0x7ffdceb71360 sp 0x7ffdceb71358
READ of size 1 at 0x6020000a46b3 thread T0
    #0 0x555afc in FuzzMe /home/thorbjoern/CodeIntelligence/ci-tools/tests/fuzzme.c:19:12
    #1 0x5572fc in LLVMFuzzerTestOneInput /home/thorbjoern/CodeIntelligence/ci-tools/tests/ci-fuzzing-targets/fuzz_target.cc:10:3
    #2 0x42fb97 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:517
    #3 0x4358cb in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:442
    #4 0x4358cb in fuzzer::Fuzzer::MutateAndTestOne() /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:651
    #5 0x437163 in fuzzer::Fuzzer::Loop(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:773
    #6 0x42927e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:754
    #7 0x41e742 in main /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
    #8 0x7fafe589a82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291
    #9 0x41e7b8 in _start (/home/thorbjoern/CodeIntelligence/ci-tools/tests/ci-fuzzing-targets/fuzz_target+0x41e7b8)

0x6020000a46b3 is located 0 bytes to the right of 3-byte region [0x6020000a46b0,0x6020000a46b3)
allocated by thread T0 here:
    #0 0x550ea8 in operator new[](unsigned long) /home/thorbjoern/llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:95
    #1 0x42fad9 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:508
    #2 0x4358cb in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:442
    #3 0x4358cb in fuzzer::Fuzzer::MutateAndTestOne() /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:651
    #4 0x437163 in fuzzer::Fuzzer::Loop(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fuzzer::fuzzer_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:773
    #5 0x42927e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:754
    #6 0x41e742 in main /home/thorbjoern/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20
    #7 0x7fafe589a82f in __libc_start_main /build/glibc-Cl5G7W/glibc-2.23/csu/../csu/libc-start.c:291

SUMMARY: AddressSanitizer: heap-buffer-overflow /home/thorbjoern/CodeIntelligence/ci-tools/tests/fuzzme.c:19:12 in FuzzMe
Shadow bytes around the buggy address:
  0x0c048000c880: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c048000c890: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c048000c8a0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd
  0x0c048000c8b0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c048000c8c0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
=>0x0c048000c8d0: fa fa fd fa fa fa[03]fa fa fa fa fa fa fa fa fa
  0x0c048000c8e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c048000c8f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c048000c900: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c048000c910: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c048000c920: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13872==ABORTING
MS: 2 CopyPart-EraseBytes-; base unit: de3a753d4f1def197604865d76dba888d6aefc71
0x46,0x55,0x5a,
FUZ
artifact_prefix='./'; Test unit written to ./crash-0eb8e4ed029b774d80f2b66408203801cb982a60
Base64: RlVa
